# Version: 1.0.0
# Description: This is a GitHub Actions workflow file that builds and pushes a Docker image to Amazon ECR.
# Notes:
name: Docker Buildx - Standard

on:
  workflow_dispatch:
  push:
    branches:
      - mantra
      - devops/configuring-CICD-k8s-deployment
      - mantra-cosmwasm
    tags:
      - "v*.*.*"
    paths:
      - "frontend/**"
      - "server/**"
      - ".github/workflows/docker-buildx.yaml"
  pull_request:
    branches:
      - mantra
    paths:
      - "frontend/**"
      - "server/**"
      - ".github/workflows/docker-buildx.yaml"

env:
  REGISTRY: ${{ vars.REGISTRY || format('ghcr.io/{0}', github.repository_owner) }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME || github.event.repository.name }}
  BUILD_ARGS: ${{ vars.BUILD_ARGS || '' }}
  BUILD_ARCH: ${{ vars.BUILD_ARCH || 'linux/amd64,linux/arm64' }}

# Set concurrency for this workflow to cancel in-progress jobs if retriggered.
# The github.ref is only available when triggered by a PR so fall back to github.run_id for other cases.
# The github.run_id is unique for each run, giving each such invocation it's own unique concurrency group.
# Basically, if you push to a PR branch, jobs that are still running for that PR will be cancelled.
# But jobs started because of a merge to main or a release tag push are not cancelled.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true
jobs:
  buildx:
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - context: frontend
            image_name: ${{ github.event.repository.name }}-frontend
            build_args: |
              NEXT_PUBLIC_APP_API_URI=/api
          - context: server
            image_name: ${{ github.event.repository.name }}-server
    runs-on: ${{ vars.RUNNER_SPEC || 'ubuntu-latest' }}
    steps:
    - uses: mantra-chain-tech/infra-github-actions-mantrachain/docker-buildx-v1@main
      with:
        container_repository: ${{ env.REGISTRY }}/${{ matrix.image_name }}
        build_context: ${{ matrix.context }}
        build_args: ${{ matrix.build_args }}
        registry: ${{ env.REGISTRY }}
        registry_username: ${{ github.actor }}
        registry_password: ${{ secrets.GITHUB_TOKEN }}
        arch: ${{ env.BUILD_ARCH}}
        docker_push: true
    - name: Failure Notification
      if: failure()
      uses: mantra-chain-tech/infra-github-actions-mantrachain/slack-notifications@main
      env:
        COMMIT_SHA: echo ${{ github.event.workflow_run.head_sha || github.sha }} | cut -c1-7
      with:
        slack_notification_webhook: ${{ secrets.SLACK_WEBHOOK_CICD_NOTIFICATIONS }}
        slack_message: "*[ERROR!] DOCKER BUILD PROCESS FAILED TO COMPLETE SUCCESSFULLY!!* \n\n`${{ github.actor }}` tried to build docker image for `${{ github.event.repository.name }}`.\n`${{ env.COMMIT_SHA }}` on `${{ github.ref_name }}`. The details at:\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
