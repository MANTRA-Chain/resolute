apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  labels:
    app.kubernetes.io/instance: postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.3.1
  name: postgresql
  namespace: mantrachain-canary-devnet-v1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: resolute-frontend-devnet-v1
    app.kubernetes.io/part-of: mantrachain-devnet-v1-resolute
    platform/chart-name: generic-helm-chart
    platform/chart-version: 0.4.2
  name: resolute-frontend-devnet-v1
  namespace: mantrachain-canary-devnet-v1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: resolute-server-devnet-v1
    app.kubernetes.io/part-of: mantrachain-devnet-v1-resolute
    platform/chart-name: generic-helm-chart
    platform/chart-version: 0.4.2
  name: resolute-server-devnet-v1
  namespace: mantrachain-canary-devnet-v1
---
apiVersion: v1
data:
  password: aGVhcnRsYW5kLW9jZWFuLXByYWV0b3ItbmVhdA==
  postgres-password: N3pPeXdOWnp0Tw==
kind: Secret
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  labels:
    app.kubernetes.io/instance: postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.3.1
  name: postgresql
  namespace: mantrachain-canary-devnet-v1
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.3.1
  name: postgresql
  namespace: mantrachain-canary-devnet-v1
spec:
  ports:
  - name: tcp-postgresql
    nodePort: null
    port: 5432
    targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: postgresql
    app.kubernetes.io/name: postgresql
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.3.1
  name: postgresql-hl
  namespace: mantrachain-canary-devnet-v1
spec:
  clusterIP: None
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: postgresql
    app.kubernetes.io/name: postgresql
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: resolute-frontend-devnet-v1
    app.kubernetes.io/part-of: mantrachain-devnet-v1-resolute
    platform/chart-name: generic-helm-chart
    platform/chart-version: 0.4.2
  name: resolute-frontend-devnet-v1
  namespace: mantrachain-canary-devnet-v1
spec:
  ports:
  - name: http
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app.kubernetes.io/name: resolute-frontend-devnet-v1
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: resolute-server-devnet-v1
    app.kubernetes.io/part-of: mantrachain-devnet-v1-resolute
    platform/chart-name: generic-helm-chart
    platform/chart-version: 0.4.2
  name: resolute-server-devnet-v1
  namespace: mantrachain-canary-devnet-v1
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 1323
  selector:
    app.kubernetes.io/name: resolute-server-devnet-v1
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: resolute-frontend-devnet-v1
    app.kubernetes.io/part-of: mantrachain-devnet-v1-resolute
    platform/chart-name: generic-helm-chart
    platform/chart-version: 0.4.2
  name: resolute-frontend-devnet-v1
  namespace: mantrachain-canary-devnet-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: resolute-frontend-devnet-v1
  template:
    metadata:
      annotations:
        checksum/config: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      labels:
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: resolute-frontend-devnet-v1
        app.kubernetes.io/part-of: mantrachain-devnet-v1-resolute
        checksum/config: d74e84cc8bbf52556ff879be709aa999deade92f
        platform/chart-name: generic-helm-chart
        platform/chart-version: 0.4.2
    spec:
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/mantra-finance/resolute-frontend:442a18b
        imagePullPolicy: IfNotPresent
        name: resolute-frontend-devnet-v1
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        resources: null
        securityContext: {}
      securityContext: {}
      serviceAccountName: resolute-frontend-devnet-v1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: resolute-server-devnet-v1
    app.kubernetes.io/part-of: mantrachain-devnet-v1-resolute
    platform/chart-name: generic-helm-chart
    platform/chart-version: 0.4.2
  name: resolute-server-devnet-v1
  namespace: mantrachain-canary-devnet-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: resolute-server-devnet-v1
  template:
    metadata:
      annotations:
        checksum/config: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      labels:
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: resolute-server-devnet-v1
        app.kubernetes.io/part-of: mantrachain-devnet-v1-resolute
        checksum/config: d74e84cc8bbf52556ff879be709aa999deade92f
        platform/chart-name: generic-helm-chart
        platform/chart-version: 0.4.2
    spec:
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/mantra-finance/resolute-frontend:442a18b
        imagePullPolicy: IfNotPresent
        name: resolute-server-devnet-v1
        ports:
        - containerPort: 1323
          name: http
          protocol: TCP
        resources: null
        securityContext: {}
        volumeMounts:
        - mountPath: /app/config.yaml
          name: resolute-server-devnet-v1-config
          subPath: config.yaml
      securityContext: {}
      serviceAccountName: resolute-server-devnet-v1
      volumes:
      - configMap:
          defaultMode: 420
          name: resolute-server-devnet-v1-config
        name: resolute-server-devnet-v1-config
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.3.1
  name: postgresql
  namespace: mantrachain-canary-devnet-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: postgresql
      app.kubernetes.io/name: postgresql
  serviceName: postgresql-hl
  template:
    metadata:
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: postgresql
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/version: 16.1.0
        helm.sh/chart: postgresql-13.3.1
      name: postgresql
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: primary
                  app.kubernetes.io/instance: postgresql
                  app.kubernetes.io/name: postgresql
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: POSTGRESQL_PORT_NUMBER
          value: "5432"
        - name: POSTGRESQL_VOLUME_DIR
          value: /bitnami/postgresql
        - name: PGDATA
          value: /bitnami/postgresql/data
        - name: POSTGRES_USER
          value: resolute
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgresql
        - name: POSTGRES_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: postgresql
        - name: POSTGRES_DATABASE
          value: resolute
        - name: POSTGRESQL_ENABLE_LDAP
          value: "no"
        - name: POSTGRESQL_ENABLE_TLS
          value: "no"
        - name: POSTGRESQL_LOG_HOSTNAME
          value: "false"
        - name: POSTGRESQL_LOG_CONNECTIONS
          value: "false"
        - name: POSTGRESQL_LOG_DISCONNECTIONS
          value: "false"
        - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
          value: "off"
        - name: POSTGRESQL_CLIENT_MIN_MESSAGES
          value: error
        - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
          value: pgaudit
        image: docker.io/bitnami/postgresql:16.1.0-debian-11-r20
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "resolute" -d "dbname=resolute" -h 127.0.0.1 -p 5432
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: postgresql
        ports:
        - containerPort: 5432
          name: tcp-postgresql
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - -e
            - |
              exec pg_isready -U "resolute" -d "dbname=resolute" -h 127.0.0.1 -p 5432
              [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits: {}
          requests:
            cpu: 250m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /bitnami/postgresql
          name: data
      hostIPC: false
      hostNetwork: false
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: postgresql
      volumes:
      - emptyDir:
          medium: Memory
        name: dshm
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: resolute-frontend-devnet-v1
    app.kubernetes.io/part-of: mantrachain-devnet-v1-resolute
    platform/chart-name: generic-helm-chart
    platform/chart-version: 0.4.2
  name: resolute-frontend-devnet-v1-resolute.v1.devnet.canary.mantrachain.dev-frontend
  namespace: mantrachain-canary-devnet-v1
spec:
  ingressClassName: nginx
  rules:
  - host: resolute.v1.devnet.canary.mantrachain.dev
    http:
      paths:
      - backend:
          service:
            name: resolute-frontend-devnet-v1
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - resolute.v1.devnet.canary.mantrachain.dev
    secretName: canary.mantrachain.dev-wildcard-tls-secret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: resolute-server-devnet-v1
    app.kubernetes.io/part-of: mantrachain-devnet-v1-resolute
    platform/chart-name: generic-helm-chart
    platform/chart-version: 0.4.2
  name: resolute-server-devnet-v1-resolute.v1.devnet.canary.mantrachain.dev-api
  namespace: mantrachain-canary-devnet-v1
spec:
  ingressClassName: nginx
  rules:
  - host: resolute.v1.devnet.canary.mantrachain.dev
    http:
      paths:
      - backend:
          service:
            name: resolute-frontend-devnet-v1
            port:
              number: 3000
        path: /api(/|$)(.*)
        pathType: Prefix
  tls:
  - hosts:
    - resolute.v1.devnet.canary.mantrachain.dev
    secretName: canary.mantrachain.dev-wildcard-tls-secret
